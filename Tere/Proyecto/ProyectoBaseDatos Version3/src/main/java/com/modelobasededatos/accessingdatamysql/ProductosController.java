//CREACION DEL CONTROLADOR @Controller:

package com.modelobasededatos.accessingdatamysql;


import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

@Controller // This means that this class is a Controller
@RequestMapping(path="/demo") // This means URL's start with /demo (after Application path)

public class ProductosController {
  @Autowired // This means to get the bean called userRepository
         // Which is auto-generated by Spring, we will use it to handle the data

 private ProductosRepository productosRepository;
  

@PostMapping(path="/addP") // Map ONLY POST Requests
  public @ResponseBody String addNewBDProductos (
          
           @RequestParam Integer IdProducto
          , @RequestParam(value = "nombreproducto", defaultValue = "") String nombreproducto 
          , @RequestParam(value = "precio", defaultValue = "") Float precio 
          , @RequestParam(value = "IVA", defaultValue = "") Float IVA
          , @RequestParam(value = "PVP", defaultValue = "") Float PVP
          , @RequestParam(value = "Descuento", defaultValue = "") Float Descuento
          , @RequestParam(value = "Descripcion", defaultValue = "") String Descripcion) {
    // @ResponseBody means the returned String is the response, not a view name
    // @RequestParam means it is a parameter from the GET or POST request

 
    
    BDProductos n = new BDProductos();
    n.setIdProducto(IdProducto);
    n.setnombreproducto(nombreproducto);
    n.setprecio(precio);
    n.setIVA(IVA);
    n.setPVP(PVP);
    n.setDescuento(Descuento);
    n.setDescripcion(Descripcion);
     
    
    
    productosRepository.save(n);
    
    return "Saved";
    
  }


 @GetMapping(path="/allP")
  public @ResponseBody Iterable<BDProductos> getAllBDProductos() {
    // This returns a JSON or XML with the users
    return productosRepository.findAll();
  }
  
    
  
  
}
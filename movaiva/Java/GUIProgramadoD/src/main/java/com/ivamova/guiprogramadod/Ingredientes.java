/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.ivamova.guiprogramadod;

import java.awt.Component;
import java.awt.GridLayout;
import java.util.Arrays;
import javax.swing.JCheckBox;

/**
 *
 * @author Usuario
 */
public class Ingredientes extends javax.swing.JFrame {

    private String ingredientes[] ;
    private Double precioIngre[] ;
    private Pedido pedido;

    /**
     * Creates new form Ingredientes
     */
    public Ingredientes(Pedido pedido,String[] ingredientes,Double[] precios) {
        initComponents();
        this.pedido = pedido;
        this.ingredientes=ingredientes;
        precioIngre=precios;
    }

    public String[] getIngredientes() {
        return ingredientes;
    }

    public Double[] getPrecioIngre() {
        return precioIngre;
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnPrincipal = new javax.swing.JPanel();
        pnIngredientes = new javax.swing.JPanel();
        btAnadir = new javax.swing.JButton();
        btConfirmar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ingredientes");
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
        });

        javax.swing.GroupLayout pnIngredientesLayout = new javax.swing.GroupLayout(pnIngredientes);
        pnIngredientes.setLayout(pnIngredientesLayout);
        pnIngredientesLayout.setHorizontalGroup(
            pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        pnIngredientesLayout.setVerticalGroup(
            pnIngredientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 94, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout pnPrincipalLayout = new javax.swing.GroupLayout(pnPrincipal);
        pnPrincipal.setLayout(pnPrincipalLayout);
        pnPrincipalLayout.setHorizontalGroup(
            pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnIngredientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        pnPrincipalLayout.setVerticalGroup(
            pnPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, pnPrincipalLayout.createSequentialGroup()
                .addComponent(pnIngredientes, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        btAnadir.setText("AÃ‘ADIR");
        btAnadir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btAnadirActionPerformed(evt);
            }
        });

        btConfirmar.setText("CONFIRMAR");
        btConfirmar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btConfirmarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(pnPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btAnadir)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 52, Short.MAX_VALUE)
                .addComponent(btConfirmar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(pnPrincipal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 120, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btAnadir, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btConfirmar))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        pintarCheckbox();
    }//GEN-LAST:event_formWindowOpened

    private void btConfirmarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btConfirmarActionPerformed
        String[] ingre = new String[ingredientes.length];
        Double[] pre = new Double[ingredientes.length + 1];
        int contIngre = 0;

        Component[] componentes = pnIngredientes.getComponents();
        for (int contador = 0; contador < componentes.length; contador++) {
            if (componentes[contador] instanceof JCheckBox) {
                if (((JCheckBox) componentes[contador]).isSelected()) {
                    ingre[contIngre] = ((JCheckBox) componentes[contador]).getText();
                    pre[contIngre + 1] = precioIngre[Arrays.asList(ingredientes).indexOf(ingre[contIngre])];
                    contIngre++;
                }
            }
        }
        pedido.setIngredientes(ingre);
        pedido.setPrecios(pre);
        this.setVisible(false);
    }//GEN-LAST:event_btConfirmarActionPerformed

    public Pedido getPedido() {
        return pedido;
    }

    private void btAnadirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btAnadirActionPerformed
        NuevoIngrediente nuevo = new NuevoIngrediente(ingredientes, precioIngre, this, true);
        nuevo.setVisible(true);
        ingredientes = nuevo.getNuevoIngredientes();
        precioIngre = nuevo.getNuevoPrecios();
        pintarCheckbox();
    }//GEN-LAST:event_btAnadirActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ingredientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ingredientes(null,null,null).setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btAnadir;
    private javax.swing.JButton btConfirmar;
    private javax.swing.JPanel pnIngredientes;
    private javax.swing.JPanel pnPrincipal;
    // End of variables declaration//GEN-END:variables

    private void pintarCheckbox() {
        pnIngredientes.removeAll();
        JCheckBox[] check = new JCheckBox[ingredientes.length];
        pnIngredientes.setLayout(new GridLayout(0, 2, 10, 10));
        for (int contador = 0; contador < ingredientes.length; contador++) {
            check[contador] = new JCheckBox(ingredientes[contador]);
            pnIngredientes.add(check[contador]);
            pnIngredientes.revalidate();
            if (pedido.getIngredientes() != null) {
                String[] ingrePedido = pedido.getIngredientes();
                for (int pedidoIngre = 0; pedidoIngre < ingrePedido.length; pedidoIngre++) {
                    if (ingrePedido[pedidoIngre] != null) {
                        if (check[contador].getText().equals(ingrePedido[pedidoIngre])) {
                            check[contador].setSelected(true);
                            pedidoIngre = ingrePedido.length;
                        }
                    }
                }

            }

        }
    }
}

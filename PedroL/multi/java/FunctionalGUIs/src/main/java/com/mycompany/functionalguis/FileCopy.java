/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.mycompany.functionalguis;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;

/**
 *
 * @author Usuario
 */
public class FileCopy extends javax.swing.JFrame {

    String InFilename;
    /**
     * Creates new form FileCopy
     */
    public FileCopy() {
        setLocationRelativeTo(null);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        FileChooser = new javax.swing.JFileChooser();
        PanelLabels = new javax.swing.JPanel();
        LabelOSName = new javax.swing.JLabel();
        LabelOSVersion = new javax.swing.JLabel();
        LabelJREVendor = new javax.swing.JLabel();
        LabelJREVersion = new javax.swing.JLabel();
        PanelCopier = new javax.swing.JPanel();
        ButtonInputFile = new javax.swing.JButton();
        ButtonOutputFile = new javax.swing.JButton();
        FieldInputFile = new javax.swing.JTextField();
        FieldOutputFile = new javax.swing.JTextField();
        ButtonCopy = new javax.swing.JButton();
        LabelStatus = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CoolCopier");
        setResizable(false);

        LabelOSName.setText("Sistema Operativo: "
            + System.getProperty("os.name"));

        LabelOSVersion.setText("Version: "
            + System.getProperty("os.version") + " (whaat?? no way!)");

        LabelJREVendor.setText("Vendedor del JRE: "
            + System.getProperty("java.vendor"));

        LabelJREVersion.setText("Version: "
            + System.getProperty("java.version"));

        javax.swing.GroupLayout PanelLabelsLayout = new javax.swing.GroupLayout(PanelLabels);
        PanelLabels.setLayout(PanelLabelsLayout);
        PanelLabelsLayout.setHorizontalGroup(
            PanelLabelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLabelsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelLabelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelOSName)
                    .addComponent(LabelOSVersion)
                    .addComponent(LabelJREVendor)
                    .addComponent(LabelJREVersion))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        PanelLabelsLayout.setVerticalGroup(
            PanelLabelsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelLabelsLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(LabelOSName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelOSVersion)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelJREVendor)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(LabelJREVersion)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        ButtonInputFile.setText("Entrada");
        ButtonInputFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ButtonInputFileMouseReleased(evt);
            }
        });

        ButtonOutputFile.setText("Salida");
        ButtonOutputFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                ButtonOutputFileMouseReleased(evt);
            }
        });

        ButtonCopy.setText("Copiar");
        ButtonCopy.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                ButtonCopyMousePressed(evt);
            }
        });

        LabelStatus.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        LabelStatus.setText("The coolest copier ever");

        javax.swing.GroupLayout PanelCopierLayout = new javax.swing.GroupLayout(PanelCopier);
        PanelCopier.setLayout(PanelCopierLayout);
        PanelCopierLayout.setHorizontalGroup(
            PanelCopierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCopierLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelCopierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelCopierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                        .addComponent(ButtonInputFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(ButtonOutputFile, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(ButtonCopy, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelCopierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(LabelStatus, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(FieldInputFile)
                    .addComponent(FieldOutputFile, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 156, Short.MAX_VALUE))
                .addContainerGap())
            .addComponent(jSeparator1)
        );
        PanelCopierLayout.setVerticalGroup(
            PanelCopierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelCopierLayout.createSequentialGroup()
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1)
                .addGroup(PanelCopierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonInputFile)
                    .addComponent(FieldInputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelCopierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonOutputFile)
                    .addComponent(FieldOutputFile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(PanelCopierLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(ButtonCopy)
                    .addComponent(LabelStatus))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelLabels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addComponent(PanelCopier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(PanelLabels, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, 0)
                .addComponent(PanelCopier, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ButtonInputFileMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonInputFileMouseReleased
        int FCReturn;
        
        FileChooser.setFileSelectionMode(JFileChooser.FILES_ONLY);
        FCReturn = FileChooser.showOpenDialog(FileCopy.this);
        
        if(FCReturn == JFileChooser.APPROVE_OPTION) {
            FieldInputFile.setText(FileChooser.getSelectedFile().getPath());
            InFilename = FileChooser.getSelectedFile().getName();
        } else {
            System.out.println("File choice cancelled");
        }
    }//GEN-LAST:event_ButtonInputFileMouseReleased

    private void ButtonOutputFileMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonOutputFileMouseReleased
        int FCReturn;
        
        FileChooser.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);
        FCReturn = FileChooser.showOpenDialog(FileCopy.this);
        
        if(FCReturn == JFileChooser.APPROVE_OPTION) {
            FieldOutputFile.setText(FileChooser.getSelectedFile().getPath() + "\\" + InFilename);
        } else {
            System.out.println("Directory choice cancelled");
        }
    }//GEN-LAST:event_ButtonOutputFileMouseReleased

    private void ButtonCopyMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_ButtonCopyMousePressed
        System.out.println("Copying...");
        LabelStatus.setText("Copiando...");
        
        try {
            File InFile = new File(FieldInputFile.getText());
            FileInputStream InReader = new FileInputStream(InFile);
            FileOutputStream OutWriter = new FileOutputStream(FieldOutputFile.getText());
            
            for(;InReader.available() > 0;) {
                OutWriter.write(InReader.read());
            }
            System.out.println("Copy successful");
            LabelStatus.setText("Copia exitosa");
            
            InReader.close();
            OutWriter.close();
        } catch (FileNotFoundException ex) {
            Logger.getLogger(FileCopy.class.getName()).log(Level.SEVERE, null, ex);
            LabelStatus.setText("Campo incorrecto");
        } catch (IOException ex) {
            Logger.getLogger(FileCopy.class.getName()).log(Level.SEVERE, null, ex);
            LabelStatus.setText("IOEXCEPTION?!?!?!?!? O_O");
        }
    }//GEN-LAST:event_ButtonCopyMousePressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Windows".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(FileCopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(FileCopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(FileCopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(FileCopy.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new FileCopy().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ButtonCopy;
    private javax.swing.JButton ButtonInputFile;
    private javax.swing.JButton ButtonOutputFile;
    private javax.swing.JTextField FieldInputFile;
    private javax.swing.JTextField FieldOutputFile;
    private javax.swing.JFileChooser FileChooser;
    private javax.swing.JLabel LabelJREVendor;
    private javax.swing.JLabel LabelJREVersion;
    private javax.swing.JLabel LabelOSName;
    private javax.swing.JLabel LabelOSVersion;
    private javax.swing.JLabel LabelStatus;
    private javax.swing.JPanel PanelCopier;
    private javax.swing.JPanel PanelLabels;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables
}

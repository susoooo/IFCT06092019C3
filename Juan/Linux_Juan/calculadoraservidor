#include <sys/types.h>
#include <sys/socket.h>
#include <netinet/in.h>

#include <stdio.h>
#include <unistd.h>
#include <string.h>


#define PORTNUMBER 12543 /* El número del puerto */
#define BACKLOG 2 /*El número de conexiones permitidas*/

	int main(void)
	{
		char buf[1024];
		int fd;
		int fd2; /* Ficheros descriptores */
		int len; /* Tamaño */
		struct sockaddr_in servidor;
		struct sockaddr_in cliente;
	
		/* Se crea el socket */
		fd=socket(PF_INET,SOCK_DGRAM,0);
		
		/* Capturamos error si no se crea el socket */
		if(connect<0)
		{
		perror("Error creating socket");
		exit(-1);
		}
		
		servidor.sin_family = AF_INET;
		servidor.sin_port = htons(PORTNUMBER);
		/* pone la Ip del seridor automáticamente  */
		servidor.sin_addr.s_addr = htonl(INADDR_ANY);
		/* escribimos ceros en el reto de la estructura */
		bzero(&(server.sin_zero),8); 
   
		len = sizeof(struct sockaddr_in);
		
		
		/* Se asigna dirección al socket */
		
		if(bind(fd, (struct sockaddr *) &servidor, &len)<0)
		{
		printf("Error en bind()/n";
		exit(-1);
		}
		/* Llamada a listen */
		if(listen(fd,BACKLOG) < 0)
		{
		printf("Error en listen");
		exit(-1);
		}
		
		/* Se lee del socket hasta el final del fichero*/	
		//while((fd2=recv(s, buf, sizeof(buf), 0))>0)
		while(1)
		{
			// Se imprimen los datos leídos
			//write(1, buf, n);
			if((fd2= accept(fd,(struct sockaddr *)&cliente, &len))<0
			{
			printf("Error en accept()\n");
			exit(-1);
			}
   			printf("Se obtuvo una conexión desde %s\n", inet_ntoa(client.sin_addr)); 
      /* que mostrará la IP del cliente */
      
      	  send(fd2,"Bienvenido a mi servidor.\n",22,0); 
      /* que enviará el mensaje de bienvenida al cliente */
      
			//sendto(s, buf, n, 0, (struct sockaddr*) &name, len);
			
			// Se cierra el socket
			close(fd2);
		}
	}
